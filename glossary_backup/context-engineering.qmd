---
title: Context Engineering
subtitle: "test test test" 
description: "What is context engineering, what's the difference to prompt engineering, and why everyone seems to be so excited about it all of a sudden."
date: 2025-06-27
toc: true
---

I'm reporting back from  AI bubble. 
While Labubu seems to be taking over other bubbles, my tpot bubble is starting to fixate on a new term: Context engineering.

## What's context engineerig?

"context rot"

## Context engineering vs. prompt engieering

From what I understand, "prompt engineering" and "context engineering" mean the same thing. 
The discussion revolves around replacing the term "prompt engineering" with the term "context engineering" because captures the core of it better:

The term "prompt engineering" is often misunderstood. 
> People associate prompts with short task descriptions you'd give an LLM in your day-to-day use. 

> When in every industrial-strength LLM app, context engineering is the delicate art and science of filling the context window with just the right information for the next step. 

- Too little or of the wrong form and the LLM doesn't have the right context for optimal performance.
- Too much or too irrelevant and the LLM costs might go up and performance might come down. ("context rot")

"Prompt"

"Context", "Context window"
(e.g., "an LLM has a context window of XYZ tokens")


Prompt engineering:
- Task
- Adding the right context (additional information)

The whole context vs. the prompt


## History of the term "Context engineering"

First, there was prompt engineering

The hype wave seems to have been kicked-off by a tweet from Tobi Lutke, CEO at Shopify, which was amplified by the quote tweet from Andrej Karpathy

<blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://twitter.com/karpathy/status/1937902205765607626"></a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://x.com/ankrgyl/status/1913766591910842619"></a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

But neither of them coined the term.

// https://cognition.ai/blog/dont-build-multi-agents#a-theory-of-building-long-running-agents
